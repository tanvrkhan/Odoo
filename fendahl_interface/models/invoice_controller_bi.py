from odoo import models, fields

class InvoiceControllerBI(models.Model):
    _name = 'invoice.controller.bi'
    _description = 'Invoice Controller Business Intelligence'

    invoice_number = fields.Integer(string='Invoice Number')
    provisional_enum = fields.Boolean(string='Provisional')
    invoice_date = fields.Date(string='Invoice Date')
    payment_due_date = fields.Date(string='Payment Due Date')
    counterparty = fields.Char(string='Counterparty')
    internal_company = fields.Char(string='Internal Company')
    commodity = fields.Char(string='Commodity')
    location = fields.Char(string='Location')
    invoice_amt = fields.Float(string='Invoice Amount')
    paid_amt = fields.Float(string='Paid Amount')
    open_amt = fields.Float(string='Open Amount')
    paid_received = fields.Char(string='Paid/Received')
    amt_currency = fields.Char(string='Amount Currency')
    our_invoice_ref = fields.Char(string='Our Invoice Reference')
    their_invoice_ref = fields.Char(string='Their Invoice Reference')
    invoice_status = fields.Char(string='Invoice Status')
    fully_paid_date = fields.Date(string='Fully Paid Date')
    last_payment_date = fields.Date(string='Last Payment Date')
    ref_currency = fields.Char(string='Reference Currency')
    currency_index_entry = fields.Char(string='Currency Index Entry')
    venture = fields.Char(string='Venture')
    act_period_code = fields.Char(string='Activity Period Code')
    payment_method = fields.Char(string='Payment Method')
    transmit_status = fields.Char(string='Transmit Status')
    payment_id = fields.Integer(string='Payment ID')
    display_invoice_id = fields.Integer(string='Display Invoice ID')
    our_payment_instr = fields.Char(string='Our Payment Instruction')
    their_payment_instr = fields.Char(string='Their Payment Instruction')
    payment_release_date = fields.Date(string='Payment Release Date')
    payable_receivable = fields.Char(string='Payable/Receivable')
    posting_date = fields.Date(string='Posting Date')
    strategy_code = fields.Char(string='Strategy Code')
    origin_location = fields.Char(string='Origin Location')
    grade_category = fields.Char(string='Grade Category')
    mot = fields.Char(string='MOT')
    sap_act_period = fields.Char(string='SAP Activity Period')
    sap_posting_date = fields.Date(string='SAP Posting Date')
    current_accounting_period = fields.Char(string='Current Accounting Period')
    bill_to_party = fields.Char(string='Bill To Party')
    payer = fields.Char(string='Payer')
    ship_to_party = fields.Char(string='Ship To Party')
    invoice_presented_by = fields.Char(string='Invoice Presented By')
    invoice_created_by = fields.Char(string='Invoice Created By')
    blocked_for_payment = fields.Boolean(string='Blocked for Payment')
    adjusted_due_date = fields.Date(string='Adjusted Due Date')
    is_financially_settled = fields.Boolean(string='Is Financially Settled')
    approver1 = fields.Char(string='Approver 1')
    approver2 = fields.Char(string='Approver 2')
    invoice_open_status = fields.Char(string='Invoice Open Status')
    display_invoice = fields.Char(string='Display Invoice')
    accounting_period_date = fields.Char(string='Accounting Period Date')
    posting_status_enum = fields.Integer(string='Posting Status Enum')
    posting_needed_status_enum = fields.Integer(string='Posting Needed Status Enum')
    batch_process_id = fields.Integer(string='Batch Process ID')
    base_currency = fields.Char(string='Base Currency')
    reporting_currency = fields.Char(string='Reporting Currency')
    invoice_amt_base_currency = fields.Float(string='Invoice Amount Base Currency')
    invoice_amt_reporting_currency = fields.Float(string='Invoice Amount Reporting Currency')
    external_reference_number = fields.Char(string='External Reference Number')
    master_deal_id = fields.Integer(string='Master Deal ID')
    reference_number = fields.Char(string='Reference Number')
    is_pledged_to_bank = fields.Boolean(string='Is Pledged to Bank')
    product_description = fields.Char(string='Product Description')
    payment_status = fields.Char(string='Payment Status')
    counterparty_level_instrument = fields.Char(string='Counterparty Level Instrument')
    invoice_type = fields.Char(string='Invoice Type')
    fx_rate = fields.Float(string='FX Rate')
    nav_posting_date = fields.Date(string='NAV Posting Date')
    invoice_creation_date = fields.Date(string='Invoice Creation Date')
    tax_clause_detail_code = fields.Char(string='Tax Clause Detail Code')
    tax_clause_description = fields.Char(string='Tax Clause Description')
    posting_group = fields.Char(string='Posting Group')
    allocated_amount = fields.Float(string='Allocated Amount')
    open_allocation = fields.Float(string='Open Allocation')
    business_unit = fields.Char(string='Business Unit')
    override_extended_amount = fields.Float(string='Override Extended Amount')
    is_override_extended_amount = fields.Boolean(string='Is Override Extended Amount')
    counterpart_name = fields.Char(string='Counterpart Name')
    is_segment_final = fields.Boolean(string='Is Segment Final')
    parent_invoice_id = fields.Integer(string='Parent Invoice ID')
    country_of_origin = fields.Char(string='Country of Origin')
    country_of_load = fields.Char(string='Country of Load')
    country_of_discharge = fields.Char(string='Country of Discharge')
    is_animal_feed = fields.Boolean(string='Is Animal Feed')
    reach_category = fields.Char(string='REACH Category')
    crop_year = fields.Char(string='Crop Year')
    variety = fields.Char(string='Variety')
    title_transfer_location = fields.Char(string='Title Transfer Location')
    netting = fields.Boolean(string='Netting')
    vehicle_mot_type = fields.Char(string='Vehicle MOT Type')
    int_approved_person = fields.Char(string='Internally Approved Person')
    ext_approved_person = fields.Char(string='Externally Approved Person')
    nav_package_id = fields.Char(string='NAV Package ID')
    nav_invoice_id = fields.Char(string='NAV Invoice ID')
    packaging_code = fields.Char(string='Packaging Code')
    license_code = fields.Char(string='License Code')
    specification_code = fields.Char(string='Specification Code')
    mirror_invoice_master_id = fields.Integer(string='Mirror Invoice Master ID')
    transfer_commencement_date = fields.Date(string='Transfer Commencement Date')
    invoice_raised_on = fields.Date(string='Invoice Raised On')
    is_allocate_to_lc = fields.Boolean(string='Is Allocate to LC')
    weight_final_at = fields.Char(string='Weight Final At')
    custom_invoice_number = fields.Char(string='Custom Invoice Number')
    cp_date = fields.Date(string='CP Date')
    vessel = fields.Char(string='Vessel')
    material = fields.Char(string='Material')
    account_payment_status = fields.Char(string='Account Payment Status')
    invoice_category = fields.Char(string='Invoice Category')
    is_attachment_available = fields.Boolean(string='Is Attachment Available')
    is_notes_available = fields.Boolean(string='Is Notes Available')
    book = fields.Char(string='Book')
    position_status = fields.Char(string='Position Status')
    write_off_amt = fields.Float(string='Write Off Amount')
    custom_trade_number = fields.Char(string='Custom Trade Number')
    custom_section_number = fields.Char(string='Custom Section Number')
    quantity = fields.Float(string='Quantity')
    erp_posting_date = fields.Date(string='ERP Posting Date')
    erp_accounting_period = fields.Char(string='ERP Accounting Period')
    invoice_qty_uom = fields.Char(string='Invoice Quantity UOM')
    is_payment_due_overridden = fields.Boolean(string='Is Payment Due Overridden')
    invoice_link_id = fields.Char(string='Invoice Link ID')
    ref_invoice_id = fields.Integer(string='Reference Invoice ID')
    ref_custom_invoice_id = fields.Char(string='Reference Custom Invoice ID')
    letter_of_credit = fields.Char(string='Letter of Credit')
    certificate_no = fields.Char(string='Certificate Number')
    tax_currency = fields.Char(string='Tax Currency')
    invoice_amt_tax_ccy_excl = fields.Float(string='Invoice Amount Tax Currency Excluding Tax')
    invoice_amt_tax_ccy_incl = fields.Float(string='Invoice Amount Tax Currency Including Tax')
    tax_amt_tax_ccy = fields.Float(string='Tax Amount Tax Currency')
    sample_required = fields.Char(string='Sample Required')
    sampling_process = fields.Char(string='Sampling Process')
    our_vat_number = fields.Char(string='Our VAT Number')
    their_vat_number = fields.Char(string='Their VAT Number')
    company_category = fields.Char(string='Company Category')
    arbitration_code = fields.Char(string='Arbitration Code')
    period_type = fields.Char(string='Period Type')
    doc_classification = fields.Char(string='Document Classification')
    write_off_amount = fields.Float(string='Write Off Amount')
    write_off_amount_currency = fields.Char(string='Write Off Amount Currency')
    invoice_value_date = fields.Date(string='Invoice Value Date')
    is_generate_cost = fields.Boolean(string='Is Generate Cost')
    origin = fields.Char(string='Origin')
    portfolio = fields.Char(string='Portfolio')
    grade = fields.Char(string='Grade')
    invoice_amount_excl_tax = fields.Float(string='Invoice Amount Excluding Tax')
    invoice_amount_inc_tax = fields.Float(string='Invoice Amount Including Tax')
    tax_amount = fields.Float(string='Tax Amount')
    write_off_date = fields.Date(string='Write Off Date')
    invoice_reference = fields.Char(string='Invoice Reference')
    is_adjusted = fields.Boolean(string='Is Adjusted')
    transport_carriage = fields.Char(string='Transport Carriage')
    transport_carriage_code = fields.Char(string='Transport Carriage Code')
    is_migrated = fields.Boolean(string='Is Migrated')
    payment_currency = fields.Char(string='Payment Currency')
    trade_link_code = fields.Char(string='Trade Link Code')
    trade_link_id = fields.Char(string='Trade Link ID')
    lock_id = fields.Integer(string='Lock ID')
    status_enum = fields.Boolean(string='Status Enum')
    modify_person_id = fields.Integer(string='Modify Person ID')
    modify_person = fields.Char(string='Modify Person')
    last_modify_date = fields.Date(string='Last Modify Date')
    customer_id = fields.Integer(string='Customer ID')
    bi_record_creation_date = fields.Date(string='BI Record Creation Date')
